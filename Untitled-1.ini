Başlangıç dizisi:
[22, 27, 16, 2, 18, 6]

1. Adım:
İkinci eleman (27), 22’den büyük olduğu için yerinde kalır.
[22, 27, 16, 2, 18, 6]

2. Adım:
16, 27’den küçük → 27 sağa kayar.
16, 22’den küçük → 22 de sağa kayar.
→ 16 yerleşir.
[16, 22, 27, 2, 18, 6]

3. Adım:
2, 27’den küçük → 27 sağa kayar.
2, 22’den küçük → 22 sağa kayar.
2, 16’dan küçük → 16 sağa kayar.
→ 2 başa geçer.
[2, 16, 22, 27, 18, 6]

4. Adım:
18, 27’den küçük → 27 sağa kayar.
18, 22’den küçük → 22 sağa kayar.
18, 16’dan büyük → 18 yerleşir.
[2, 16, 18, 22, 27, 6]

5. Adım:
6, 27’den küçük → 27 sağa.
6, 22’den küçük → 22 sağa.
6, 18’den küçük → 18 sağa.
6, 16’dan küçük → 16 sağa.
6, 2’den büyük → 6 yerleşir.
[2, 6, 16, 18, 22, 27]

🔚 Sıralı dizi: [2, 6, 16, 18, 22, 27]

⚙️ Big-O Gösterimi (Insertion Sort)
Best case: O(n) → Dizi zaten sıralıysa, sadece birer karşılaştırma yapılır.

Average case: O(n²)

Worst case: O(n²) → Dizi tamamen ters sıralıysa.

🕵️‍♂️ Time Complexity'de 18 sayısı hangi case'e girer?
Sıralı dizimiz: [2, 6, 16, 18, 22, 27]

18 burada ortada yer alıyor.
👉 Cevap: Average case

🧩 Selection Sort ile [7,3,5,8,2,9,4,15,6] dizisinin ilk 4 adımı
Selection Sort, her adımda en küçük elemanı bulur ve en baştakiyle yer değiştirir. Kendi kendine “en küçük kimmiş, bir bakayım” diye soran bir dedektif gibidir. 🔍

Başlangıç dizisi:
[7, 3, 5, 8, 2, 9, 4, 15, 6]

1. Adım:
Minimum: 2 (indeks 4) → 2 ile 7 yer değiştirir.
[2, 3, 5, 8, 7, 9, 4, 15, 6]

2. Adım:
Minimum: 3 (zaten doğru yerde)
[2, 3, 5, 8, 7, 9, 4, 15, 6]

3. Adım:
Minimum: 4 (indeks 6) → 4 ile 5 yer değiştirir.
[2, 3, 4, 8, 7, 9, 5, 15, 6]

4. Adım:
Minimum: 5 (indeks 6) → 5 ile 8 yer değiştirir.
[2, 3, 4, 5, 7, 9, 8, 15, 6]